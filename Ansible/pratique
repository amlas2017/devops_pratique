// Espace disque d'un noeud
[vagrant@server00 ~]$ ansible server01 -a "df -h"      -----> disque info.
[vagrant@server00 ~]$ ansible server01 -a "free -m"    -----> mémoire info.

// Lancer Tower via un cluster    https://www.youtube.com/watch?v=-cYnnACXcf8
 Préliminaires: mettre à jour le /etc/hosts  , les clés ssh  et le password dans inventory (avant de lancer setup.sh).
 Etapes à respecter:
--> Creating a Project:
      * type SCM : manuel
      * créer le dossier de playbook dans /var/lib/awx/projects + $ chown awx nom_dossier_de palybook)
--> Creating a credential:
      * type : Machine
      * renseigner la clé ssh privée (depuis la machine hote)
--> Creating a Inventory (add inventory + group + host).
--> Creating a job template.
--> Run the Job Template. (C'est Template qu'on execute)

// Lancer ansible-tower ----> moins évident pour mettre en place un cluster de VM
$ sudo vagrant init ansible/tower
$ sudo vagrant up --provider virtualbox
$ sudo vagrant ssh


// Playbook pour installer les dépendances (Centos)
---
- name: Installation du serveur
  hosts: all
  become: yes   # ou  remote_user: root
  tasks:
    - yum: name=epel-release state=latest   # ---->  Impossible d'installer htop sans cette ligne
    - name: Installation de dependances
      yum: name={{ item }} state=latest
      with_items:
       - vim
       - tree
       - htop
       - git
       - curl
       - wget
       - net-tools

// playbook pour gérer les users (groups , clé ssh , ...)
---
- hosts: all
  remote_user: root
  vars:
    user: amlas1
    groupes: gamlas
  tasks:
    - group:
        name: "{{groupes}}"
        state: present

    - name: Add the user {{user}}  # les " " ne sont pas demandés ici
      user:
        name: "{{user}}"        #   les  " " sont obligatoires ici
        shell: /bin/bash
        groups: "{{groupes}}"
        append: yes
    
    - name: générer clé ssh
      user:
        name: "{{user}}"
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa

