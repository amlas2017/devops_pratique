// Cours simple en français K8s   ---->    https://www.devopssec.fr/category/apprendre-kubernetes

// Tester un cluster Kubernetes:
      ---> https://www.digitalocean.com/community/tutorials/how-to-create-a-kubernetes-cluster-using-kubeadm-on-ubuntu-16-04
 
 $ kubectl create deployment nginx --image=nginx
 $ kubectl get deployment
 $ kubectl expose deploy nginx --port 80 --target-port 80 --type NodePort
 $ kubectl get services
             Output
            NAME         TYPE        CLUSTER-IP       EXTERNAL-IP           PORT(S)        AGE
            kubernetes   ClusterIP   10.96.0.1        <none>                443/TCP        1d
            nginx        NodePort    10.109.228.209   <none>                80:nginx_port/TCP   40m
 
 ----> visit http://worker_1_ip:nginx_port 
 

// Les utilitaires kubens (pour namespace) et kubectx (pour le context)
https://blog.zwindler.fr/2018/08/28/utiliser-kubectx-kubens-pour-changer-facilement-de-context-et-de-namespace-dans-kubernetes/

// Cluster fonctionnel ( vagrant + centos )
   https://github.com/justmeandopensource/kubernetes

// Cluster fonctionnel ( vagrant + ansible )
   https://www.devopssec.fr/article/creer-cluster-kubernetes-multi-noeud-vagrant-ansible
   
   
// Cluster Kubernetes fonctionnel : -----> https://github.com/rootsongjc/kubernetes-vagrant-centos-cluster

// Cluster vagrant : https://github.com/mesoshq/vagrant-cluster-centos/blob/master/Vagrantfile
   
// Pour interroger le cluster K8S depuis le terminal: ( Il faut installer kubectl auparavant !!!!!)
   [hass@hass-ThinkPad k8s-cluster-vagrant-ansible]$ scp -r vagrant@192.168.50.10:/home/vagrant/.kube $HOME/
   
   [hass@hass-ThinkPad k8s-cluster-vagrant-ansible]$ kubectl get nodes
   
       

// Exemple pratique pour déployer wordpress+mysql dans k8s:
------>  https://cloud.google.com/kubernetes-engine/docs/tutorials/persistent-disk?hl=fr


// Cluster de VM Centos -----> Cluster fonctionnel sur Xeon
https://github.com/rootsongjc/kubernetes-vagrant-centos-cluster/
Pour utiliser kubectl sans sudo :  
[vagrant@node1 ~]$ export KUBERNETES_MASTER=http://node1:8080

// logs ... plus d'infos sur le cycle de vie du pod
kubectl logs -f nompod-pod

// Commandes Kubernetes : https://kubernetes.io/fr/docs/reference/kubectl/cheatsheet/
kubectl get nodes
kubectl get pods
kubectl create -f pods.yml   ---> créer un pod à partir d'un fichier yml
kubectl describe pods nom_pod
kubectl logs nom_pod
kubectl exec -it nom_pod -- /bin/bash


//Stateless & Statefull
stateless = sans état ----> ne conserve pas d'informations liées à une requete ou connection.
