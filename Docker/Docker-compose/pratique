// Synthaxe docker-compose
version: "3"
services:

networks:

volumes:

// Exemple d'un docker-compose simple  ---->  https://github.com/ttwthomas/apprendre-docker
version: "3"
services:
  monapp:      // <--------------------------------------------------------- 1er service 
    build: .   // à partir d'un Dockerfile si l'image n'existe pas
    image: monimage   // nom de l'image existante
    depends_on:      // <-----------------------------------------------Lier les 2 services----
      - redis
    ports:
      - "80:80"
   
      
  redis:        // <---------------------------------------------------------1er service            
    image: redis

// Le dockerfile pour build monimage    ---->  https://github.com/ttwthomas/apprendre-docker
    FROM python:2.7-slim
    WORKDIR /app
    COPY . /app
    RUN pip install -r requirements.txt
    EXPOSE 80
    ENV NOM coca
    CMD ["python", "app.py"]

// Exemple simple avec volumes et variables d'environnement 
version: '3'
services:
   db:
     image: mysql:5.7
     volumes:
       - db_data:/var/lib/mysql
     restart: always
     environment:
       MYSQL_ROOT_PASSWORD: somewordpress
       MYSQL_DATABASE: wordpress
       MYSQL_USER: wordpress
       MYSQL_PASSWORD: wordpress

   wordpress:
     depends_on:      // peut changer d'emplacement, par exemple avant "volume"
       - db
     image: wordpress:latest
     ports:
       - "8000:80"
     restart: always
     environment:
       WORDPRESS_DB_HOST: db:3306
       WORDPRESS_DB_USER: wordpress
       WORDPRESS_DB_PASSWORD: wordpress
volumes:
    db_data:

// Pour intéragir avec un container docker-cmpose lancé (par exemple mysql), on utilise :  sudo docker exec -it e7f013a52d9b /bin/bash
